{
  "if": {
    "allOf": [
      {
        "field": "type",
        "equals": "Microsoft.Compute/virtualMachines"
      },
      {
        "field": "location",
        "equals": "[parameters('sourceRegion')]"
      },
      {
        "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.vhd.uri",
        "exists": "false"
      },
      {
        "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.encryptionSettings",
        "exists": "false"
      },
      {
        "anyOf": [
          {
            "allOf": [
              {
                "field": "location",
                "equals": "[parameters('targetRegion')]"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/zones",
                "exists": "true"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/zones[*]",
                "notEquals": "[parameters('targetZone')]"
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "location",
                "notEquals": "[parameters('targetRegion')]"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/zones",
                "exists": "true"
              },
              {
                "value": "[length(parameters('targetZone'))]",
                "greater": 0
              }
            ]
          },
          {
            "allOf": [
              {
                "field": "location",
                "notEquals": "[parameters('targetRegion')]"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/zones",
                "exists": "false"
              }
            ]
          }
        ]
      }
    ]
  },
  "then": {
    "effect": "deployIfNotExists",
    "details": {
      "type": "Microsoft.Resources/links",
      "roleDefinitionIds": [
        "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
      ],
      "existenceCondition": {
        "field": "name",
        "like": "ASR-Protect-*"
      },
      "deployment": {
        "properties": {
          "mode": "incremental",
          "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "apiVersion": {
                "type": "String"
              },
              "avSetId": {
                "type": "String"
              },
              "cacheStorageAccountId": {
                "type": "String"
              },
              "dataDiskIds": {
                "type": "object"
              },
              "osDiskId": {
                "type": "String"
              },
              "ppgId": {
                "type": "String"
              },
              "recoveryNetworkId": {
                "type": "String"
              },
              "replicationPolicyName": {
                "type": "String"
              },
              "sourceContainerName": {
                "type": "String"
              },
              "sourceFabricName": {
                "type": "String"
              },
              "sourceResourceGroupName": {
                "type": "String"
              },
              "targetContainerName": {
                "type": "String"
              },
              "targetFabricName": {
                "type": "String"
              },
              "targetRegion": {
                "type": "String"
              },
              "targetResourceGroupName": {
                "type": "String"
              },
              "targetZone": {
                "type": "String"
              },
              "vaultName": {
                "type": "String"
              },
              "vaultResourceGroupName": {
                "type": "String"
              },
              "vmId": {
                "type": "String"
              },
              "vmZones": {
                "type": "Object"
              }
            },
            "variables": {
              "avSetApiVersion":      "2019-03-01",
              "deploymentApiVersion": "2017-05-10",
              "vmApiVersion":         "2019-07-01",
              "ppgApiVersion":        "2019-12-01",

              "replicationFabrics":    "replicationFabrics",
              "replicationContainers": "replicationProtectionContainers",
              "replicationPolicies":   "replicationPolicies",

              "portalLinkPrefix": "https://portal.azure.com/#@microsoft.onmicrosoft.com/resource",
              "schemaLink":       "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",

              "defaultAvSet":              "defaultAvSet-asr",
              "defaultPPG":                "defaultPPG-asr",
              "eligibilityResultsDefault": "default",
              "protectedItemSuffix":       "-policy",
              "recoveryAvSetPrefix":       "RecoveryAvSet-",
              "recoveryPPGPrefix":         "RecoveryPPG-",

              "avSetType":                         "Microsoft.Compute/availabilitySets",
              "deploymentType":                    "Microsoft.Resources/deployments",
              "networkType":                       "Microsoft.Network/virtualNetworks",
              "ppgType":                           "Microsoft.Compute/proximityPlacementGroups",
              "protectedItemType":                 "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems",
              "replicationEligibilityResultsType": "Microsoft.RecoveryServices/replicationEligibilityResults",
              "storageType":                       "Microsoft.Storage/storageAccounts",
              "vaultType":                         "Microsoft.RecoveryServices/vaults",

              "avSetTemplateName":                      "[concat(variables('recoveryAvSetPrefix'), last(split(parameters('vmId'), '/')))]",
              "avSetTemplateName64":                    "[if(greater(length(variables('avSetTemplateName')), 64), substring(variables('avSetTemplateName'), 0, 64), variables('avSetTemplateName'))]",
              "ppgTemplateName":                        "[concat(variables('recoveryPPGPrefix'), last(split(parameters('vmId'), '/')))]",
              "ppgTemplateName64":                      "[if(greater(length(variables('ppgTemplateName')), 64), substring(variables('ppgTemplateName'), 0, 64), variables('ppgTemplateName'))]",
              "replicationProtectedItemTemplateName":   "[concat('ASR-', parameters('sourceResourceGroupName'), '-', last(split(parameters('vmId'), '/')))]",
              "replicationProtectedItemTemplateName64": "[if(greater(length(variables('replicationProtectedItemTemplateName')), 64), substring(variables('replicationProtectedItemTemplateName'), 0, 64), variables('replicationProtectedItemTemplateName'))]",

              "vmDataDiskIds": "[array(parameters('dataDiskIds').rawValue)]",
              "vmDiskCount":   "[add(length(variables('vmDataDiskIds')), int(1))]",
              "diskIds":       "[concat(array(parameters('osDiskId')), array(parameters('dataDiskIds').rawValue))]",

              "sourceResourceGroupId":   "[resourceGroup().id]",
              "armIdSubscriptionPrefix": "[substring(variables('sourceResourceGroupId'), 0, lastIndexOf(variables('sourceResourceGroupId'), '/'))]",
              "vaultId":                 "[resourceId(parameters('vaultResourceGroupName'), variables('vaultType'), parameters('vaultName'))]",
              "eligibilityResultsId":    "[extensionResourceId(parameters('vmId'), variables('replicationEligibilityResultsType'), variables('eligibilityResultsDefault'))]",

              "protectedItemName":     "[concat(parameters('vaultName'), '/', parameters('sourceFabricName'), '/', parameters('sourceContainerName'), '/', guid(resourceGroup().id, deployment().name), variables('protectedItemSuffix'))]",
              "recoveryAvSetName":     "[if(empty(parameters('avSetId')), variables('defaultAvSet'), concat(last(split(parameters('avSetId'), '/')), '-asr'))]",
              "recoveryAvSetId":       "[if(empty(parameters('avSetId')), '', resourceId(parameters('targetResourceGroupName'), variables('avSetType'), variables('recoveryAvSetName')))]",
              "recoveryAvZone":        "[if(greater(length(parameters('vmZones').rawValue), 0), parameters('targetZone'), '')]",
              "recoveryPPGName":       "[if(empty(parameters('ppgId')), variables('defaultPPG'), concat(last(split(parameters('ppgId'), '/')), '-asr'))]",
              "recoveryPPGId":         "[if(empty(parameters('ppgId')), '', resourceId(parameters('targetResourceGroupName'), variables('ppgType'), variables('recoveryPPGName')))]",
              "replicationPolicyId":   "[concat(variables('vaultId'), '/', variables('replicationPolicies'), '/', parameters('replicationPolicyName'))]",
              "targetResourceGroupId": "[concat(variables('armIdSubscriptionPrefix'), '/', parameters('targetResourceGroupName'))]",
              "targetContainerId":     "[concat(variables('vaultId'), '/', variables('replicationFabrics'), '/', parameters('targetFabricName'), '/', variables('replicationContainers'), '/', parameters('targetContainerName'))]"
            },
            "resources": [
              {
                "condition": "[not(empty(parameters('ppgId')))]",
                "apiVersion": "[variables('deploymentApiVersion')]",
                "name": "[variables('ppgTemplateName64')]",
                "type": "Microsoft.Resources/deployments",
                "resourceGroup": "[parameters('targetResourceGroupName')]",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "[variables('schemaLink')]",
                    "contentVersion": "1.0.0.0",
                    "parameters": { },
                    "variables": { },
                    "resources": [
                      {
                        "condition": "[not(empty(parameters('ppgId')))]",
                        "type": "[variables('ppgType')]",
                        "name": "[variables('recoveryPPGName')]",
                        "apiVersion": "[variables('ppgApiVersion')]",
                        "location": "[parameters('targetRegion')]",
                        "properties": {
                          "proximityPlacementGroupType": "[if(empty(parameters('ppgId')), 'Standard', reference(parameters('ppgId'), variables('ppgApiVersion')).proximityPlacementGroupType)]"
                        }
                      }
                    ]
                  },
                  "parameters": { }
                }
              },
              {
                "condition": "[not(empty(parameters('avSetId')))]",
                "apiVersion": "[variables('deploymentApiVersion')]",
                "name": "[variables('avSetTemplateName64')]",
                "type": "Microsoft.Resources/deployments",
                "resourceGroup": "[parameters('targetResourceGroupName')]",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "[variables('schemaLink')]",
                    "contentVersion": "1.0.0.0",
                    "parameters": { },
                    "variables": { },
                    "resources": [
                      {
                        "condition": "[not(empty(parameters('avSetId')))]",
                        "type": "[variables('avSetType')]",
                        "sku": {
                          "name": "[if(empty(parameters('avSetId')), 'Aligned', reference(parameters('avSetId'), variables('avSetApiVersion'), 'Full').sku.name)]"
                        },
                        "name": "[variables('recoveryAvSetName')]",
                        "apiVersion": "[variables('avSetApiVersion')]",
                        "location": "[parameters('targetRegion')]",
                        "tags": { },
                        "properties": {
                          "platformUpdateDomainCount": "[if(empty(parameters('avSetId')), '5', reference(parameters('avSetId'), variables('avSetApiVersion')).platformUpdateDomainCount)]",
                          "platformFaultDomainCount": "[if(empty(parameters('avSetId')), '2', reference(parameters('avSetId'), variables('avSetApiVersion')).platformFaultDomainCount)]",
                          "proximityPlacementGroup": "[if(empty(parameters('ppgId')), json('null'), json(concat('{', '\"id\"', ':', '\"', variables('recoveryPPGId'), '\"', '}')))]"
                        }
                      }
                    ]
                  },
                  "parameters": { }
                },
                "dependsOn": [
                  "[variables('ppgTemplateName64')]"
                ]
              },
              {
                "apiVersion": "[variables('deploymentApiVersion')]",
                "name": "[variables('replicationProtectedItemTemplateName64')]",
                "type": "Microsoft.Resources/deployments",
                "resourceGroup": "[parameters('vaultResourceGroupName')]",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "[variables('schemaLink')]",
                    "contentVersion": "1.0.0.0",
                    "parameters": { },
                    "variables": { },
                    "resources": [
                      {
                        "condition": "[lessOrEquals(length(reference(variables('eligibilityResultsId'), '2018-07-10').errors), int('0'))]",
                        "type": "[variables('protectedItemType')]",
                        "name": "[variables('protectedItemName')]",
                        "apiVersion": "[parameters('apiVersion')]",
                        "properties": {
                          "policyId": "[variables('replicationPolicyId')]",
                          "providerSpecificDetails": {
                            "instanceType": "A2A",
                            "fabricObjectId": "[parameters('vmId')]",
                            "recoveryResourceGroupId": "[variables('targetResourceGroupId')]",
                            "recoveryContainerId": "[variables('targetContainerId')]",
                            "recoveryAvailabilitySetId": "[variables('recoveryAvSetId')]",
                            "recoveryAzureNetworkId": "[parameters('recoveryNetworkId')]",
                            "recoveryProximityPlacementGroupId": "[variables('recoveryPPGId')]",
                            "recoveryAvailabilityZone": "[variables('recoveryAvZone')]",
                            "vmDisks": [ ],
                            "copy": [
                              {
                                "name": "vmManagedDisks",
                                "count": "[variables('vmDiskCount')]",
                                "input": {
                                  "diskId": "[if(equals(copyIndex('vmManagedDisks'), int(0)), reference(parameters('vmId'), variables('vmApiVersion')).storageProfile.osDisk.managedDisk.Id, variables('vmDataDiskIds')[sub(copyIndex('vmManagedDisks'), int(1))])]",
                                  "primaryStagingAzureStorageAccountId": "[parameters('cacheStorageAccountId')]",
                                  "recoveryResourceGroupId": "[variables('targetResourceGroupId')]"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "outputs": {
                      "vmName": {
                        "value": "[last(split(parameters('vmId'), '/'))]",
                        "type": "string"
                      },
                      "availabilitySetUrl": {
                        "value": "[if(empty(parameters('avSetId')), '', concat(variables('portalLinkPrefix'), variables('recoveryAvSetId')))]",
                        "type": "string"
                      },
                      "proximityPlacementGroupUrl": {
                        "value": "[if(empty(parameters('ppgId')), '', concat(variables('portalLinkPrefix'), variables('recoveryPPGId')))]",
                        "type": "string"
                      },
                      "replicationEligibilityResults": {
                        "value": "[reference(variables('eligibilityResultsId'), parameters('apiVersion'))]",
                        "type": "Object"
                      }
                    }
                  },
                  "parameters": { }
                },
                "dependsOn": [
                  "[variables('ppgTemplateName64')]",
                  "[variables('avSetTemplateName64')]"
                ]
              }
            ],
            "outputs": { }
          },
          "parameters": {
            "apiVersion": {
              "value": "2018-07-10"
            },
            "avSetId": {
              "value": "[field('Microsoft.Compute/virtualMachines/availabilitySet.id')]"
            },
            "cacheStorageAccountId": {
              "value": "[parameters('cacheStorageAccountId')]"
            },
            "dataDiskIds": {
              "value": {
                "rawValue": "[field('Microsoft.Compute/virtualMachines/storageProfile.dataDisks[*].managedDisk.id')]",
                "emptyArray": [ ]
              }
            },
            "osDiskId": {
              "value": "[field('Microsoft.Compute/virtualMachines/storageProfile.osDisk.managedDisk.id')]"
            },
            "ppgId": {
              "value": "[field('Microsoft.Compute/virtualMachines/proximityPlacementGroup.id')]"
            },
            "recoveryNetworkId": {
              "value": "[parameters('recoveryNetworkId')]"
            },
            "replicationPolicyName": {
              "value": "[parameters('replicationPolicyName')]"
            },
            "sourceResourceGroupName": {
              "value": "[resourcegroup().Name]"
            },
            "sourceContainerName": {
              "value": "[parameters('sourceContainerName')]"
            },
            "sourceFabricName": {
              "value": "[parameters('sourceFabricName')]"
            },
            "targetContainerName": {
              "value": "[parameters('targetContainerName')]"
            },
            "targetFabricName": {
              "value": "[parameters('targetFabricName')]"
            },
            "targetRegion": {
              "value": "[parameters('targetRegion')]"
            },
            "targetResourceGroupName": {
              "value": "[last(split(parameters('targetResourceGroupId'), '/'))]"
            },
            "targetZone": {
              "value": "[parameters('targetZone')]"
            },
            "vaultName": {
              "value": "[last(split(parameters('vaultId'), '/'))]"
            },
            "vaultResourceGroupName": {
              "value": "[last(split(parameters('vaultResourceGroupId'), '/'))]"
            },
            "vmId": {
              "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachines/', field('name'))]"
            },
            "vmZones": {
              "value": {
                "rawValue": "[field('Microsoft.Compute/virtualMachines/zones')]",
                "emptyArray": [ ]
              }
            }
          }
        }
      }
    }
  }
}